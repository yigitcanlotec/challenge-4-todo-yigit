name: Build and Push Docker Images to ECR

on:
  push:
    branches: [feature/docker-workflow] # Trigger the workflow on push to the feature/docker-workflow branch

jobs:
  build:
    runs-on: ubuntu-latest # Set the type of machine to run on

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v2 # Use the official GitHub Actions action to check out the repository

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 # GitHub Action to set up Docker Buildx

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: eu-west-1 # Use the appropriate AWS region where your ECR is located

      - name: Build, tag, and push server image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_SERVER }} # Assuming you have a separate ECR repository for the server
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd server
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.server .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push client image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_CLIENT }} # Assuming you have a separate ECR repository for the client
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd client
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.client .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
